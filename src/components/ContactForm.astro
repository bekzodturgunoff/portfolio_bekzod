---
import { getDictionary } from '../i18n';

interface Props {
  lang?: string;
}

const { lang } = Astro.props;
const t = getDictionary(lang);
---
<div class="max-w-2xl" data-reveal>
  <form id="contact-form" class="space-y-4">
    <div>
      <label for="name" class="block text-sm font-medium mb-1.5 text-neutral-700 dark:text-neutral-300">{t.contact.form.name}</label>
      <input
        type="text"
        id="name"
        name="name"
        required
        class="w-full px-4 py-2.5 rounded-lg border border-black/15 dark:border-white/15 bg-white dark:bg-neutral-900 text-neutral-900 dark:text-neutral-100 placeholder:text-neutral-400 dark:placeholder:text-neutral-500 focus:outline-none focus:ring-2 focus:ring-neutral-900 dark:focus:ring-white focus:border-transparent transition-all"
        placeholder={t.contact.form.namePlaceholder}
      />
    </div>

    <div>
      <label for="email" class="block text-sm font-medium mb-1.5 text-neutral-700 dark:text-neutral-300">{t.contact.form.email}</label>
      <input
        type="email"
        id="email"
        name="email"
        required
        class="w-full px-4 py-2.5 rounded-lg border border-black/15 dark:border-white/15 bg-white dark:bg-neutral-900 text-neutral-900 dark:text-neutral-100 placeholder:text-neutral-400 dark:placeholder:text-neutral-500 focus:outline-none focus:ring-2 focus:ring-neutral-900 dark:focus:ring-white focus:border-transparent transition-all"
        placeholder={t.contact.form.emailPlaceholder}
      />
    </div>

    <div>
      <label for="message" class="block text-sm font-medium mb-1.5 text-neutral-700 dark:text-neutral-300">{t.contact.form.message}</label>
      <textarea
        id="message"
        name="message"
        required
        rows="5"
        class="w-full px-4 py-2.5 rounded-lg border border-black/15 dark:border-white/15 bg-white dark:bg-neutral-900 text-neutral-900 dark:text-neutral-100 placeholder:text-neutral-400 dark:placeholder:text-neutral-500 focus:outline-none focus:ring-2 focus:ring-neutral-900 dark:focus:ring-white focus:border-transparent transition-all resize-y"
        placeholder={t.contact.form.messagePlaceholder}
      ></textarea>
    </div>

    <div class="flex items-center gap-3">
      <button
        type="submit"
        class="btn btn-primary btn-lg"
      >
        {t.contact.form.submit}
      </button>
      <span id="form-status" class="text-sm text-neutral-600 dark:text-neutral-400"></span>
    </div>
  </form>
</div>

<script>
  const form = document.getElementById('contact-form') as HTMLFormElement;
  const status = document.getElementById('form-status') as HTMLSpanElement;

  if (form && status) {
    form.addEventListener('submit', async (e) => {
      e.preventDefault();

      const formData = new FormData(form);
      const data = {
        name: formData.get('name'),
        email: formData.get('email'),
        message: formData.get('message'),
      };

      status.textContent = 'Sending...';
      status.className = 'text-sm text-neutral-600 dark:text-neutral-400';

      try {
        const API_BASE = (import.meta as any).env?.PUBLIC_API_BASE || 'http://localhost:5000';
        const response = await fetch(`${API_BASE}/api/contact`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(data),
        });

        if (!response.ok) {
          let bodyText = '';
          try { bodyText = await response.text(); } catch {}
          console.error('Contact form failed', {
            status: response.status,
            statusText: response.statusText,
            body: bodyText,
            apiBase: API_BASE,
          });
          throw new Error('Failed to send');
        }

        status.textContent = '✓ Message sent!';
        status.className = 'text-sm text-emerald-600 dark:text-emerald-400';
        form.reset();
        setTimeout(() => { status.textContent = ''; }, 5000);
      } catch (err) {
        console.error('Contact form error:', err);
        status.textContent = '✗ Failed to send. Please try email instead.';
        status.className = 'text-sm text-red-600 dark:text-red-400';
      }
    });
  }
</script>
