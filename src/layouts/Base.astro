---
interface Props {
  title?: string;
  description?: string;
  image?: string;
}

const { 
  title = 'Bekzod Turgunov â€” Front-end Developer & Brand-minded Designer', 
  description = 'I build fast, meaningful websites that help businesses talk to their customers. Based in Seoul, originally from Uzbekistan.',
  image = '/og-image.png'
} = Astro.props;

const siteUrl = Astro.site || new URL('http://localhost:4321');
const canonicalURL = new URL(Astro.url.pathname, siteUrl);
const imageURL = new URL(image, siteUrl);
---
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="description" content={description} />
    <meta name="color-scheme" content="light dark" />
    <link rel="icon" href="/favicon.ico" />
    <link rel="canonical" href={canonicalURL} />
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={imageURL} />

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={canonicalURL} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={imageURL} />

    <!-- Additional SEO -->
    <meta name="author" content="Bekzod Turgunov" />
    <meta name="keywords" content="front-end developer, web developer, React, Astro, Tailwind CSS, Seoul, portfolio" />
    
    <title>{title}</title>
  </head>
  <body class="min-h-screen bg-white text-neutral-900 dark:bg-neutral-950 dark:text-neutral-100">
    <slot />
  </body>
</html>

<style is:global>
  @import "../styles/globals.css";
</style>

<script>
  // set initial theme before paint
  (() => {
    try {
      const stored = localStorage.getItem('theme');
      const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
      const dark = stored ? stored === 'dark' : prefersDark;
      document.documentElement.classList.toggle('dark', dark);
    } catch {}
  })();
  // expose toggle function
  // @ts-ignore - augmenting window for simple theme toggle
  window.__toggleTheme = () => {
    const isDark = document.documentElement.classList.toggle('dark');
    try { localStorage.setItem('theme', isDark ? 'dark' : 'light'); } catch {}
    return isDark;
  };
</script>
